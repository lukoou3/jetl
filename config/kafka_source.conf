
env {
  application.name = "test"
}

sources = [
  {
    name = "kafka_source"
    type = "kafka"
    schema = "timestamp_ms:bigint, object_type:string, object_id:bigint, item_id:bigint, in_bytes:bigint, out_bytes:bigint, bytes:bigint"
    options {
      parallelism = 1
      topic = "OBJECT-STATISTICS-METRIC"
      format.type = "json"
      properties = {
        "bootstrap.servers" = "192.168.44.12:9092"
        "enable.auto.commit" = "true"
        "auto.offset.reset" = "latest"
        "group.id" =  "test"
      }
    }
  }
]

transforms = [
  {
    name = "filter"
    type = "filter"
    dependencies = ["inline_source"]
    options {
      //condition = "cast(id % 2 as int) in (1, 0)"
      condition = "id % 2 in (1, 0)"
    }
  },
  {
    name = "query"
    type = "query"
    dependencies = ["filter"]
    options {
      sql = """
      select
        id, name, split(name, ' ')[0] first_name, score, score * 2 score2
      from table
      """
    }
  }
]

sinks = [
  {
    name = "print"
    type = "print"
    dependencies = ["kafka_source"]
    options {
      //mode = "log_warn"
      format.type = "json"
    }
  }
]